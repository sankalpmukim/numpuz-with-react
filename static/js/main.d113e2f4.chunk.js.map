{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Timer.js","Context/UserContext.js","Context/UserReducer.js","Context/AuthFunctions.js","Components/Time.js","Components/TableEntry.js","Components/TableHeader.js","Components/Leaderboard.js","Components/LeaderboardSignedIn.js","Components/LeaderboardMenu.js","Context/utils.js","Components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","squares","slice","map","_","idx","squareClick","style","gridSize","Timer","won","user","isActive","reset","setReset","firestore","firebase","useState","time","setTime","useEffect","interval","setInterval","clearInterval","console","log","uid","localStorage","getItem","JSON","parse","data","setItem","stringify","leaderboardRef","collection","String","doc","get","then","exists","score","update","createdAt","FieldValue","serverTimestamp","set","userName","displayName","photoUrl","photoURL","Math","floor","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Store","React","createContext","useStore","useContext","UserProvider","children","initialState","reducer","useReducer","globalState","dispatch","Provider","LOGIN","LOGOUT","auth","SignIn","useAuthState","display","justifyContent","provider","GoogleAuthProvider","signInWithPopup","type","payload","login","SignOut","currentUser","signOut","Time","TableEntry","currUid","document","colSpan","rank","width","src","alt","TableEntryRef","forwardRef","ref","TableHeader","Component","Leaderboard","query","orderBy","useCollectionData","idField","allEntries","top","setTop","topRef","createRef","userRef","alignItems","entry","e","current","scrollIntoView","behavior","block","inline","LeaderboardSignedIn","LeaderboardMenu","generateArray","initArray","Array","from","length","index","sort","random","swapArrayElements","arr","indexA","indexB","temp","isSolvable","invCount","i","j","getInvCount","val","Number","puzzle","findXPosition","twoDArray","generateInitArray","output","count","trace","Game","setGridSize","sqrs","setSquares","setWon","setIsActive","darkMode","setDarkMode","documentElement","setProperty","alert","newSquares","indexOf","SIZE","sqrt","sortedArray","a","b","arraysEqual","movable","useCallback","mover","BEGIN","verticalChange","horizontalChange","handleClick","leftHandler","mainIndex","rightHandler","upHandler","downHandler","keyEventsCallback","callback","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","code","addEventListener","removeEventListener","backgroundColor","color","htmlFor","height","xmlns","fillRule","clipRule","gr","d","id","checked","onChange","_e","ReactDOM","render","StrictMode","state","action","Error","getElementById"],"mappings":"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","file":"static/js/main.d113e2f4.chunk.js","sourcesContent":["import \"../index.css\";\n\nconst Square = (props) => (\n  <div className=\"square\" onClick={() => props.onClick()}>\n    {props.value}\n  </div>\n);\n\nexport default Square;\n","import \"../CSS/Board.css\";\nimport Square from \"./Square\";\n// class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       gridSize: 4,\n//     };\n//   }\n//   render() {\n//     const gridSize = this.state.gridSize;\n//     const squares = Array(gridSize * gridSize)\n//       .fill(null)\n//       .map((num, idx) => <Square key={idx} />);\n//     return <div className=\"board\">{squares}</div>;\n//   }\n// }\n\nconst Board = (props) => {\n  let squares = props.squares.slice();\n  squares = squares.map((_, idx) => (\n    <Square\n      onClick={() => props.squareClick(idx)}\n      key={squares[idx]}\n      value={squares[idx]}\n    />\n  ));\n\n  return (\n    <div className=\"board\" style={{ \"--grid-size\": props.gridSize }}>\n      {squares}\n    </div>\n  );\n};\n\nexport default Board;\n","import { useState, useEffect } from \"react\";\nimport \"../index.css\";\n\nconst Timer = ({\n  won,\n  user,\n  gridSize,\n  isActive,\n  reset,\n  setReset,\n  firestore,\n  firebase,\n}) => {\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n      setTime(0);\n    }\n  }, [reset, setReset]);\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime((time) => time + 100);\n      }, 100);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive]);\n\n  useEffect(() => {\n    if (won && user) {\n      console.log(user.uid);\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n  }, [won, user, time, gridSize]);\n\n  useEffect(() => {\n    // console.log(\"in on change won\");\n    if (won && user) {\n      console.log(user.uid);\n      const leaderboardRef = firestore\n        .collection(String(gridSize))\n        .doc(user.uid);\n      leaderboardRef.get().then((doc) => {\n        if (!doc.exists) {\n          leaderboardRef.set({\n            uid: user.uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            userName: user.displayName,\n            photoUrl: user.photoURL,\n            score: time,\n          });\n        } else {\n          const { score } = doc.data();\n          if (score > time) {\n            leaderboardRef.update({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              score: time,\n            });\n          }\n        }\n      });\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [won, user, time, gridSize, firestore]);\n  return (\n    <div className=\"timer\">\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"digits mili-sec\">\n        {(\"0\" + ((time / 10) % 100)).slice(-2)}\n      </span>\n    </div>\n  );\n};\nexport default Timer;\n","import React from \"react\";\nimport firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyDBixDXHM4NCrY27GGRPP3X7SozpeUNjzw\",\n  authDomain: \"numpuz-c8a36.firebaseapp.com\",\n  projectId: \"numpuz-c8a36\",\n  storageBucket: \"numpuz-c8a36.appspot.com\",\n  messagingSenderId: \"188829020133\",\n  appId: \"1:188829020133:web:5b1c6f9c42aea6c584c90c\",\n  measurementId: \"G-J8LHBKCHE8\",\n};\nfirebase.initializeApp(config);\n\nconst Store = React.createContext();\nStore.displayName = \"Store\";\n\nexport const useStore = () => React.useContext(Store);\n\nexport const UserProvider = ({ children, initialState, reducer }) => {\n  const [globalState, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>{children}</Store.Provider>\n  );\n};\n","import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport const LOGIN = \"APP/AUTH/LOGIN\";\nexport const LOGOUT = \"APP/AUTH/LOGOUT\";\nexport const AUTH = \"APP/AUTH/ADD_AUTH\";\nexport const FIRESTORE = \"APP/AUTH/ADD_FIRESTORE\";\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nexport const initialState = {\n  user: null,\n  auth: auth,\n  firestore: firestore,\n};\n\nexport const login = (user) => ({\n  type: LOGIN,\n  payload: user,\n});\nexport const logout = () => ({\n  type: LOGOUT,\n});\n// export const auth = (auth) => ({\n//   type: AUTH,\n//   auth: auth,\n// });\n// export const firestore = (firestore) => ({\n//   type: FIRESTORE,\n//   firestore: firestore,\n// });\n\nexport const userReducer = (state = initialState, action) => {\n  let data = {};\n  switch (action.type) {\n    case LOGIN:\n      data = {\n        ...state,\n        user: action.payload,\n      };\n      break;\n    case LOGOUT:\n      data = {\n        ...state,\n        user: null,\n      };\n      break;\n    // case AUTH:\n    //   data = {\n    //     ...state,\n    //     auth: action.payload,\n    //   };\n    //   break;\n    default:\n      throw new Error(\"Invalid Dispatch operation\");\n  }\n  return data;\n};\n","import firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useStore } from \"./UserContext\";\nimport { login, logout } from \"./UserReducer\";\nimport \"../CSS/Leaderboard.css\";\n\nexport const SignIn = () => {\n  const [{ auth }, dispatch] = useStore();\n  const [user] = useAuthState(auth);\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n    dispatch(login(user));\n  };\n\n  return (\n    <div className=\"leaderboard full\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <button className=\"sign-in\" onClick={signInWithGoogle}>\n          Sign in with Google\n        </button>\n      </div>\n\n      <p>\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </div>\n  );\n};\nexport const SignOut = () => {\n  const [{ auth }, dispatch] = useStore();\n  return (\n    auth.currentUser && (\n      <button\n        className=\"sign-out\"\n        onClick={() => {\n          dispatch(logout());\n          auth.signOut();\n        }}\n      >\n        Sign Out\n      </button>\n    )\n  );\n};\n","import \"../CSS/Leaderboard.css\";\n\nconst Time = (props) => {\n  return (\n    <td>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"time mili-sec score\">\n        {(\"0\" + ((props.time / 10) % 100)).slice(-2)}\n      </span>\n    </td>\n  );\n};\nexport default Time;\n","import { forwardRef } from \"react\";\nimport { useStore } from \"../Context/UserContext\";\nimport Time from \"./Time\";\n\nexport const TableEntry = (props) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n};\nexport const TableEntryRef = forwardRef((props, ref) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr ref={ref} className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n});\n","import React, { Component } from \"react\";\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th\n            style={{\n              width: \"4rem\",\n            }}\n          >\n            Image\n          </th>\n          <th>Username</th>\n          <th>Best Score</th>\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { createRef, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useStore } from \"../Context/UserContext\";\nimport { TableEntry, TableEntryRef } from \"./TableEntry\";\nimport TableHeader from \"./TableHeader\";\nimport \"../CSS/Leaderboard.css\";\n\nconst Leaderboard = (props) => {\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  const entryRef = firestore.collection(String(props.gridSize));\n  const query = entryRef.orderBy(\"score\", \"asc\");\n  const [allEntries] = useCollectionData(query, { idField: \"uid\" });\n  //   useEffect(() => {}, [allEntries]);\n  const [top, setTop] = useState(true);\n  const topRef = createRef();\n  const userRef = createRef();\n  // const index = (allEntries, user) => {\n  //   for (let index = 0; index < allEntries.length; index++) {\n  //     const entry = allEntries[index];\n  //     if (entry.uid === user.uid) {\n  //       return index;\n  //     }\n  //   }\n  //   return -1;\n  // };\n  return (\n    user && (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <table className=\"table-container\">\n            <TableHeader />\n            <tbody>\n              {allEntries &&\n                allEntries.map((entry, idx) => {\n                  if (idx === 0) {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={topRef}\n                      />\n                    );\n                  }\n                  if (entry.uid !== user.uid) {\n                    return (\n                      <TableEntry\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                      />\n                    );\n                  } else {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={userRef}\n                      />\n                    );\n                  }\n                })}\n            </tbody>\n          </table>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            onClick={(e) => {\n              if (top) {\n                if (userRef.current !== null) {\n                  userRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                    inline: \"nearest\",\n                  });\n                }\n                setTop(false);\n              } else {\n                topRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"start\",\n                  inline: \"nearest\",\n                });\n                setTop(true);\n              }\n            }}\n          >\n            {top ? \"Scroll to you\" : \"Scroll to top\"}\n          </button>\n        </div>\n      </div>\n    )\n  );\n};\nexport default Leaderboard;\n\n// export default class Table extends Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         data: []\n//       }\n//       this.componentDidMount = this.componentDidMount.bind(this)\n//       this.handleSort = this.handleSort.bind(this)\n//     }\n\n//     componentDidMount() {\n//       fetch('https://fcctop100.herokuapp.com/api/fccusers/top/recent')\n//         .then((response) => response.json())\n//         .then((json) => this.setState({\n//           data: json\n//       }))\n//     }\n\n//     handleSort(attribute) {\n//       this.setState({\n//         data: this.state.data.sort(\n//           (a,b) => parseInt(a[attribute], 10) > parseInt(b[attribute], 10) ? -1 : 1\n//       )})\n//     }\n\n//     render() {\n//       const rows = this.state.data.map((row, index) =>\n//         <Tablerow\n//           key={row.username}\n//           position={index + 1}\n//           username={row.username}\n//           alltime={row.alltime}\n//           recent={row.recent}\n//           className={index % 2 === 0 ? 'pure-table-odd' : ''}\n//         />)\n\n//       return (\n//         <table className=\"pure-table\">\n//           <Tablehead onChange={this.handleSort} />\n//           <tbody>\n//             { rows }\n//           </tbody>\n//         </table>\n//       )\n//     }\n//   }\n","import { SignOut } from \"../Context/AuthFunctions\";\nimport Leaderboard from \"./Leaderboard\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardSignedIn = (props) => {\n  return (\n    <div className=\"leaderboard full\">\n      <div className=\"full\">\n        <div className=\"full\">\n          You are logged in as {props.user.displayName}\n        </div>\n        <SignOut />\n      </div>\n\n      <Leaderboard gridSize={props.gridSize} />\n    </div>\n  );\n};\nexport default LeaderboardSignedIn;\n","import LeaderboardSignedIn from \"./LeaderboardSignedIn\";\nimport { SignIn } from \"../Context/AuthFunctions\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardMenu = (props) => {\n  const [{ auth }] = useStore();\n  const [user] = useAuthState(auth);\n  return user ? (\n    <LeaderboardSignedIn user={user} gridSize={props.gridSize} />\n  ) : (\n    <SignIn />\n  );\n};\nexport default LeaderboardMenu;\n","const generateArray = (gridSize) => {\n  const initArray = Array.from({ length: gridSize * gridSize }, (_, index) =>\n    String(index + 1)\n  );\n  // initArray[initArray.length - 1] = String(initArray.length - 1);\n  // initArray[initArray.length - 2] = \"##\";\n  // return initArray;\n  initArray[initArray.length - 1] = \"##\";\n  initArray.sort(() => Math.random() - 0.5);\n  return initArray;\n};\n\nconst swapArrayElements = (arr, indexA, indexB) => {\n  const temp = arr[indexA];\n  arr[indexA] = arr[indexB];\n  arr[indexB] = temp;\n  return arr;\n};\n\nconst arraysEqual = (a, b) => {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\n\nconst getInvCount = (squares, gridSize) => {\n  let invCount = 0;\n  for (let i = 0; i < gridSize * gridSize - 1; i++) {\n    for (let j = i + 1; j < gridSize * gridSize; j++) {\n      if (squares[i] > squares[j] && squares[i] !== 0 && squares[j] !== 0) {\n        invCount++;\n      }\n    }\n  }\n  return invCount;\n};\n\nconst findXPosition = (puzzle, gridSize) => {\n  for (let i = gridSize - 1; i >= 0; i--) {\n    for (let j = gridSize - 1; j >= 0; j--) {\n      if (puzzle[i][j] === 0) {\n        return gridSize - i;\n      }\n    }\n  }\n};\n\nconst twoDArray = (squares, gridSize) => {\n  let arr = new Array(gridSize);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(gridSize);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      arr[i][j] = squares[i * gridSize + j];\n    }\n  }\n  return arr;\n};\n\nconst isSolvable = (squares, gridSize) => {\n  squares = squares.map((val) => {\n    if (val === \"##\") return 0;\n    else return Number(val);\n  });\n  // console.log(squares);\n  const invCount = getInvCount(squares, gridSize);\n  if (gridSize % 2 === 1) {\n    console.log(\"Odd grid:\", invCount % 2 === 0);\n    return invCount % 2 === 0;\n  } else {\n    const pos = findXPosition(twoDArray(squares, gridSize), gridSize);\n    if (pos % 2 === 1) {\n      console.log(\"Even grid:\", invCount % 2 === 0);\n      return invCount % 2 === 0;\n    } else {\n      console.log(\"Even grid:\", invCount % 2 === 1);\n      return invCount % 2 === 1;\n    }\n  }\n};\n\nconst generateInitArray = (gridSize) => {\n  let output = generateArray(gridSize);\n  let count = 0;\n  while (isSolvable(output, gridSize) === false) {\n    count++;\n    output = generateArray(gridSize);\n  }\n  console.log(\"It took this many re generations\", count);\n  console.log(output);\n  console.trace(\"generateInitArray\");\n  return output;\n};\n\nexport { generateInitArray, swapArrayElements, arraysEqual, isSolvable };\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Board from \"./Board\";\nimport Timer from \"./Timer\";\nimport LeaderboardMenu from \"./LeaderboardMenu\";\nimport \"../index.css\";\nimport {\n  generateInitArray,\n  swapArrayElements,\n  arraysEqual,\n} from \"../Context/utils\";\nimport firebase from \"firebase\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\n// const auth = firebase.auth();\nconst Game = () => {\n  const [gridSize, setGridSize] = useState(4);\n  const sqrs = generateInitArray(gridSize);\n  const [squares, setSquares] = useState(sqrs);\n  const [won, setWon] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  const [darkMode, setDarkMode] = useState(true);\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.style.setProperty(\"--bg-color\", \"rgb(47,47,47)\");\n      document.documentElement.style.setProperty(\"--main-color\", \"white\");\n    } else {\n      document.documentElement.style.setProperty(\"--bg-color\", \"white\");\n      document.documentElement.style.setProperty(\n        \"--main-color\",\n        \"rgb(47,47,47)\"\n      );\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    if (gridSize < 2 || gridSize > 10) {\n      alert(\"Gridsize can only be between 2 and 10!\");\n      setGridSize(4);\n    } else {\n      setReset(true);\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n    }\n  }, [gridSize]);\n  useEffect(() => {\n    if (user === null) {\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n      setWon(false);\n    }\n  }, [user, gridSize]);\n  useEffect(() => {\n    const newSquares = squares.slice();\n    if (newSquares.indexOf(\"##\") === -1) {\n      setWon(true);\n      return;\n    }\n    const SIZE = Math.sqrt(newSquares.length);\n    const sortedArray = Array.from({ length: SIZE * SIZE }, (_, index) =>\n      String(index + 1)\n    );\n    newSquares[newSquares.indexOf(\"##\")] = String(newSquares.length);\n    if (arraysEqual(newSquares, sortedArray)) {\n      console.log(\"Game won\");\n      // setTime(0);\n      setIsActive(false);\n      setWon(true);\n      return;\n    }\n    setWon(false);\n  }, [squares]);\n\n  useEffect(() => {\n    if (won) {\n      alert(`Congratulations!! You have won the game!`);\n      if (user === null) {\n        alert(`Represent your score on the global leaderboard by logging in!`);\n      }\n    }\n  }, [won, user]);\n\n  const movable = useCallback(\n    (idx) => {\n      const mover = squares.indexOf(\"##\");\n      // Horizontal:-1\n      // Vertical:1\n      // Not possible:0\n      if (idx === mover) {\n        return 0;\n      }\n      if (idx % gridSize === mover % gridSize) {\n        return 1;\n      } else {\n        const BEGIN = mover - (mover % gridSize);\n        if (idx >= BEGIN && idx <= BEGIN + gridSize - 1) {\n          return -1;\n        }\n        return 0;\n      }\n    },\n    [gridSize, squares]\n  );\n\n  const verticalChange = useCallback(\n    (idx, mover) => {\n      // console.log(gridSize);\n      let newSquares = squares.slice();\n      if (idx < mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") - gridSize\n          );\n        }\n      } else if (idx > mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          // console.log(gridSize);\n          // console.log(newSquares);\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") + gridSize\n          );\n        }\n      }\n      setSquares(newSquares);\n    },\n    [gridSize, squares]\n  );\n\n  const horizontalChange = useCallback(\n    (idx, mover) => {\n      let newSquares = squares.slice();\n      if (idx < mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") - 1\n          );\n        }\n      } else if (idx > mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") + 1\n          );\n        }\n      }\n      setSquares(newSquares);\n    },\n    [squares]\n  );\n\n  const handleClick = useCallback(\n    (i) => {\n      // console.log(i);\n      if (!isActive && won === false) {\n        setIsActive(true);\n        setReset(true);\n      }\n      if (movable(i) !== 0 && won === false) {\n        if (movable(i) === 1) {\n          verticalChange(i, squares.indexOf(\"##\"));\n        } else {\n          horizontalChange(i, squares.indexOf(\"##\"));\n        }\n      }\n    },\n    [horizontalChange, isActive, movable, squares, verticalChange, won]\n  );\n  useEffect(() => {\n    const leftHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      // checking for left edge\n      if (mainIndex % gridSize !== 0) {\n        handleClick(mainIndex - 1);\n      }\n    };\n    const rightHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if ((mainIndex + 1) % gridSize !== 0) {\n        handleClick(mainIndex + 1);\n      }\n    };\n    const upHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if (mainIndex >= gridSize) {\n        handleClick(mainIndex - gridSize);\n      }\n    };\n    const downHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if (mainIndex <= gridSize * gridSize - gridSize - 1) {\n        handleClick(mainIndex + gridSize);\n      }\n    };\n    const keyEventsCallback = (e) => {\n      const callback = {\n        ArrowLeft: leftHandler,\n        ArrowRight: rightHandler,\n        ArrowUp: upHandler,\n        ArrowDown: downHandler,\n      }[e.code];\n      callback?.();\n    };\n    document.addEventListener(\"keydown\", keyEventsCallback);\n    return () => {\n      document.removeEventListener(\"keydown\", keyEventsCallback);\n    };\n  }, [gridSize, handleClick, squares]);\n\n  return (\n    <div\n      style={{\n        \"--bg-color\": darkMode ? \"rgb(47,47,47)\" : \"white\",\n        \"--main-color\": darkMode ? \"white\" : \"rgb(47,47,47)\",\n        backgroundColor: \"var(--bg-color)\",\n        color: \"var(--main-color)\",\n      }}\n    >\n      <h1>Number puzzle!</h1>\n      <div className=\"game\">\n        <Board\n          squares={squares}\n          gridSize={gridSize}\n          squareClick={handleClick}\n        />\n        <div className=\"details\">\n          <label htmlFor=\"number\">\n            <h3 className=\"grid-size\">\n              <span className=\"child-1\">Decide grid size:</span>\n\n              <span className=\"child-1\">{gridSize}</span>\n              <svg\n                width=\"24\"\n                height=\"24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                onClick={() => {\n                  setGridSize((gr) => gr + 1);\n                }}\n                style={{\n                  color: \"var(--main-color)\",\n                }}\n              >\n                <path d=\"M23.245 20l-11.245-14.374-11.219 14.374-.781-.619 12-15.381 12 15.391-.755.609z\" />\n              </svg>\n              <svg\n                width=\"24\"\n                height=\"24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                onClick={() => {\n                  setGridSize((gr) => gr - 1);\n                }}\n              >\n                <path d=\"M23.245 4l-11.245 14.374-11.219-14.374-.781.619 12 15.381 12-15.391-.755-.609z\" />\n              </svg>\n            </h3>\n          </label>\n          <div>\n            <h3>{won ? \"Game won\" : \"Game not won\"}</h3>\n          </div>\n          <div>\n            <input\n              id=\"dark-mode\"\n              type=\"checkbox\"\n              checked={darkMode}\n              onChange={(_e) => setDarkMode((val) => !val)}\n            />\n            <label htmlFor=\"dark-mode\">Enable Dark Mode</label>\n          </div>\n          <div>\n            <button\n              className=\"my-button\"\n              onClick={() => {\n                setSquares((_) => generateInitArray(gridSize));\n                setIsActive(false);\n                setWon(false);\n                setReset(true);\n              }}\n            >\n              Reset board\n            </button>\n          </div>\n          <Timer\n            reset={reset}\n            setReset={setReset}\n            won={won}\n            user={user}\n            gridSize={gridSize}\n            isActive={isActive}\n            firebase={firebase}\n            firestore={firestore}\n          />\n          <LeaderboardMenu gridSize={gridSize} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Components/Game\";\nimport { UserProvider } from \"./Context/UserContext\";\nimport { initialState, userReducer } from \"./Context/UserReducer\";\n// import { isSolvable } from \"./Context/utils\";\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider initialState={initialState} reducer={userReducer}>\n      <Game />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}