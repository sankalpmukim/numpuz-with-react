{"version":3,"sources":["Components/Square.js","Context/utils.js","Components/Board.js","Components/Timer.js","Context/UserContext.js","Context/UserReducer.js","Context/AuthFunctions.js","Components/Time.js","Components/TableEntry.js","Components/TableHeader.js","Components/Leaderboard.js","Components/LeaderboardSignedIn.js","Components/LeaderboardMenu.js","Components/WinAnimation.js","Components/Game.js","index.js"],"names":["Square","props","className","onClick","value","generateArray","gridSize","initArray","Array","from","length","_","index","String","sort","Math","random","swapArrayElements","arr","indexA","indexB","temp","isSolvable","squares","invCount","i","j","getInvCount","map","val","Number","console","log","puzzle","findXPosition","twoDArray","generateInitArray","output","count","trace","asyncAlert","str","a","setTimeout","alert","Board","setGridSize","isActive","setIsActive","won","setWon","user","reset","setReset","useState","setSquares","useEffect","newSquares","slice","indexOf","SIZE","sqrt","sortedArray","b","arraysEqual","movable","useCallback","idx","mover","BEGIN","verticalChange","horizontalChange","handleClick","leftHandler","mainIndex","rightHandler","upHandler","downHandler","keyEventsCallback","e","callback","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","code","document","addEventListener","removeEventListener","squareElements","style","Timer","firestore","firebase","time","setTime","interval","setInterval","clearInterval","uid","localStorage","getItem","JSON","parse","data","setItem","stringify","leaderboardRef","collection","doc","get","then","exists","score","update","createdAt","FieldValue","serverTimestamp","set","userName","displayName","photoUrl","photoURL","floor","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Store","React","createContext","useStore","useContext","UserProvider","children","initialState","reducer","useReducer","globalState","dispatch","Provider","LOGIN","LOGOUT","auth","SignIn","useAuthState","display","justifyContent","provider","GoogleAuthProvider","signInWithPopup","type","payload","login","SignOut","currentUser","signOut","Time","TableEntry","currUid","colSpan","rank","width","src","alt","TableEntryRef","forwardRef","ref","TableHeader","Component","Leaderboard","query","orderBy","useCollectionData","idField","allEntries","top","setTop","topRef","createRef","userRef","alignItems","entry","current","scrollIntoView","behavior","block","inline","LeaderboardSignedIn","LeaderboardMenu","WinAnimation","useWindowSize","height","Game","resetTimer","setResetTimer","resetBoard","setResetBoard","darkMode","setDarkMode","documentElement","setProperty","backgroundColor","color","htmlFor","xmlns","fillRule","clipRule","gr","d","id","checked","onChange","_e","ReactDOM","render","StrictMode","state","action","Error","getElementById"],"mappings":"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","file":"static/js/main.ba93df5b.chunk.js","sourcesContent":["import \"../index.css\";\n\nconst Square = (props) => (\n  <div className=\"square\" onClick={() => props.onClick()}>\n    {props.value}\n  </div>\n);\n\nexport default Square;\n","const generateArray = (gridSize) => {\n  const initArray = Array.from({ length: gridSize * gridSize }, (_, index) =>\n    String(index + 1)\n  );\n  // initArray[initArray.length - 1] = String(initArray.length - 1);\n  // initArray[initArray.length - 2] = \"##\";\n  // return initArray;\n  initArray[initArray.length - 1] = \"##\";\n  initArray.sort(() => Math.random() - 0.5);\n  return initArray;\n};\n\nconst swapArrayElements = (arr, indexA, indexB) => {\n  const temp = arr[indexA];\n  arr[indexA] = arr[indexB];\n  arr[indexB] = temp;\n  return arr;\n};\n\nconst arraysEqual = (a, b) => {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\n\nconst getInvCount = (squares, gridSize) => {\n  let invCount = 0;\n  for (let i = 0; i < gridSize * gridSize - 1; i++) {\n    for (let j = i + 1; j < gridSize * gridSize; j++) {\n      if (squares[i] > squares[j] && squares[i] !== 0 && squares[j] !== 0) {\n        invCount++;\n      }\n    }\n  }\n  return invCount;\n};\n\nconst findXPosition = (puzzle, gridSize) => {\n  for (let i = gridSize - 1; i >= 0; i--) {\n    for (let j = gridSize - 1; j >= 0; j--) {\n      if (puzzle[i][j] === 0) {\n        return gridSize - i;\n      }\n    }\n  }\n};\n\nconst twoDArray = (squares, gridSize) => {\n  let arr = new Array(gridSize);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(gridSize);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      arr[i][j] = squares[i * gridSize + j];\n    }\n  }\n  return arr;\n};\n\nconst isSolvable = (squares, gridSize) => {\n  squares = squares.map((val) => {\n    if (val === \"##\") return 0;\n    else return Number(val);\n  });\n  // console.log(squares);\n  const invCount = getInvCount(squares, gridSize);\n  if (gridSize % 2 === 1) {\n    console.log(\"Odd grid:\", invCount % 2 === 0);\n    return invCount % 2 === 0;\n  } else {\n    const pos = findXPosition(twoDArray(squares, gridSize), gridSize);\n    if (pos % 2 === 1) {\n      console.log(\"Even grid:\", invCount % 2 === 0);\n      return invCount % 2 === 0;\n    } else {\n      console.log(\"Even grid:\", invCount % 2 === 1);\n      return invCount % 2 === 1;\n    }\n  }\n};\n\nconst generateInitArray = (gridSize) => {\n  let output = generateArray(gridSize);\n  let count = 0;\n  while (isSolvable(output, gridSize) === false) {\n    count++;\n    output = generateArray(gridSize);\n  }\n  console.log(\"It took this many re generations\", count);\n  console.log(output);\n  console.trace(\"generateInitArray\");\n  return output;\n};\n\nconst asyncAlert = async (str) => {\n  setTimeout(() => {\n    alert(str);\n  }, 30);\n};\n\nexport {\n  generateInitArray,\n  swapArrayElements,\n  arraysEqual,\n  isSolvable,\n  asyncAlert,\n};\n","import \"../CSS/Board.css\";\nimport Square from \"./Square\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  generateInitArray,\n  arraysEqual,\n  asyncAlert,\n  swapArrayElements,\n} from \"../Context/utils\";\n// class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       gridSize: 4,\n//     };\n//   }\n//   render() {\n//     const gridSize = this.state.gridSize;\n//     const squares = Array(gridSize * gridSize)\n//       .fill(null)\n//       .map((num, idx) => <Square key={idx} />);\n//     return <div className=\"board\">{squares}</div>;\n//   }\n// }\n\nconst Board = ({\n  gridSize,\n  setGridSize,\n  isActive,\n  setIsActive,\n  won,\n  setWon,\n  user,\n  reset,\n  setReset,\n}) => {\n  const [squares, setSquares] = useState(generateInitArray(gridSize));\n  // let squares = props.squares.slice();\n  useEffect(() => {\n    const newSquares = squares.slice();\n    if (newSquares.indexOf(\"##\") === -1) {\n      setIsActive(false);\n      setWon(true);\n      return;\n    }\n    const SIZE = Math.sqrt(newSquares.length);\n    const sortedArray = Array.from({ length: SIZE * SIZE }, (_, index) =>\n      String(index + 1)\n    );\n    newSquares[newSquares.indexOf(\"##\")] = String(newSquares.length);\n    if (arraysEqual(newSquares, sortedArray)) {\n      console.log(\"Game won\");\n      // setTime(0);\n      setIsActive(false);\n      setWon(true);\n      return;\n    }\n    setWon(false);\n  }, [setIsActive, setWon, squares]);\n\n  useEffect(() => {\n    if (won && user === null) {\n      asyncAlert(\n        `Represent your score on the global leaderboard by logging in!`\n      );\n    }\n  }, [won, user]);\n\n  const movable = useCallback(\n    (idx) => {\n      const mover = squares.indexOf(\"##\");\n      // Horizontal:-1\n      // Vertical:1\n      // Not possible:0\n      if (idx === mover) {\n        return 0;\n      }\n      if (idx % gridSize === mover % gridSize) {\n        return 1;\n      } else {\n        const BEGIN = mover - (mover % gridSize);\n        if (idx >= BEGIN && idx <= BEGIN + gridSize - 1) {\n          return -1;\n        }\n        return 0;\n      }\n    },\n    [gridSize, squares]\n  );\n\n  const verticalChange = useCallback(\n    (idx, mover) => {\n      // console.log(gridSize);\n      let newSquares = squares.slice();\n      if (idx < mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") - gridSize\n          );\n        }\n      } else if (idx > mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          // console.log(gridSize);\n          // console.log(newSquares);\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") + gridSize\n          );\n        }\n      }\n      setSquares(newSquares);\n    },\n    [gridSize, squares]\n  );\n\n  const horizontalChange = useCallback(\n    (idx, mover) => {\n      let newSquares = squares.slice();\n      if (idx < mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") - 1\n          );\n        }\n      } else if (idx > mover) {\n        while (newSquares.indexOf(\"##\") !== idx) {\n          newSquares = swapArrayElements(\n            newSquares,\n            newSquares.indexOf(\"##\"),\n            newSquares.indexOf(\"##\") + 1\n          );\n        }\n      }\n      setSquares(newSquares);\n    },\n    [squares]\n  );\n\n  const handleClick = useCallback(\n    (i) => {\n      // console.log(i);\n      if (!isActive && won === false) {\n        setIsActive(true);\n      }\n      if (movable(i) !== 0 && won === false) {\n        if (movable(i) === 1) {\n          verticalChange(i, squares.indexOf(\"##\"));\n        } else {\n          horizontalChange(i, squares.indexOf(\"##\"));\n        }\n      }\n    },\n    [\n      horizontalChange,\n      isActive,\n      movable,\n      setIsActive,\n      squares,\n      verticalChange,\n      won,\n    ]\n  );\n\n  useEffect(() => {\n    const leftHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      // checking for left edge\n      if (mainIndex % gridSize !== 0) {\n        handleClick(mainIndex - 1);\n      }\n    };\n    const rightHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if ((mainIndex + 1) % gridSize !== 0) {\n        handleClick(mainIndex + 1);\n      }\n    };\n    const upHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if (mainIndex >= gridSize) {\n        handleClick(mainIndex - gridSize);\n      }\n    };\n    const downHandler = () => {\n      const newSquares = squares.slice();\n      const mainIndex = newSquares.indexOf(\"##\");\n      console.log(mainIndex);\n      // checking for left edge\n      if (mainIndex <= gridSize * gridSize - gridSize - 1) {\n        handleClick(mainIndex + gridSize);\n      }\n    };\n    const keyEventsCallback = (e) => {\n      const callback = {\n        ArrowLeft: leftHandler,\n        ArrowRight: rightHandler,\n        ArrowUp: upHandler,\n        ArrowDown: downHandler,\n      }[e.code];\n      callback?.();\n    };\n    document.addEventListener(\"keydown\", keyEventsCallback);\n    return () => {\n      document.removeEventListener(\"keydown\", keyEventsCallback);\n    };\n  }, [gridSize, handleClick, squares]);\n  useEffect(() => {\n    if (gridSize < 2 || gridSize > 10) {\n      asyncAlert(\"Gridsize can only be between 2 and 10!\");\n      setGridSize(4);\n    } else {\n      setReset(true);\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n    }\n  }, [gridSize, setGridSize, setIsActive, setReset]);\n  useEffect(() => {\n    if (user === null) {\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n      setWon(false);\n    }\n  }, [user, gridSize, setIsActive, setWon]);\n\n  useEffect(() => {\n    if (won && user === null) {\n      asyncAlert(\n        `Represent your score on the global leaderboard by logging in!`\n      );\n    }\n  }, [won, user]);\n\n  useEffect(() => {\n    if (reset) {\n      setSquares(generateInitArray(gridSize));\n      setReset(false);\n    }\n  }, [gridSize, reset, setReset]);\n\n  const squareElements = squares.map((_, idx) => (\n    <Square\n      onClick={() => handleClick(idx)}\n      key={squares[idx]}\n      value={squares[idx]}\n    />\n  ));\n\n  return (\n    <div className=\"board\" style={{ \"--grid-size\": gridSize }}>\n      {squareElements}\n    </div>\n  );\n};\n\nexport default Board;\n","import { useState, useEffect } from \"react\";\nimport \"../index.css\";\n\nconst Timer = ({\n  won,\n  user,\n  gridSize,\n  isActive,\n  reset,\n  setReset,\n  firestore,\n  firebase,\n}) => {\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n      setTime(0);\n    }\n  }, [reset, setReset]);\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime((time) => time + 100);\n      }, 100);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive]);\n\n  useEffect(() => {\n    if (won && user) {\n      console.log(user.uid);\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n  }, [won, user, time, gridSize]);\n\n  useEffect(() => {\n    // console.log(\"in on change won\");\n    if (won && user) {\n      console.log(user.uid);\n      const leaderboardRef = firestore\n        .collection(String(gridSize))\n        .doc(user.uid);\n      leaderboardRef.get().then((doc) => {\n        if (!doc.exists) {\n          leaderboardRef.set({\n            uid: user.uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            userName: user.displayName,\n            photoUrl: user.photoURL,\n            score: time,\n          });\n        } else {\n          const { score } = doc.data();\n          if (score > time) {\n            leaderboardRef.update({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              score: time,\n            });\n          }\n        }\n      });\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [won, user, time, gridSize, firestore]);\n  return (\n    <div className=\"timer\">\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"digits mili-sec\">\n        {(\"0\" + ((time / 10) % 100)).slice(-2)}\n      </span>\n    </div>\n  );\n};\nexport default Timer;\n","import React from \"react\";\nimport firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyDBixDXHM4NCrY27GGRPP3X7SozpeUNjzw\",\n  authDomain: \"numpuz-c8a36.firebaseapp.com\",\n  projectId: \"numpuz-c8a36\",\n  storageBucket: \"numpuz-c8a36.appspot.com\",\n  messagingSenderId: \"188829020133\",\n  appId: \"1:188829020133:web:5b1c6f9c42aea6c584c90c\",\n  measurementId: \"G-J8LHBKCHE8\",\n};\nfirebase.initializeApp(config);\n\nconst Store = React.createContext();\nStore.displayName = \"Store\";\n\nexport const useStore = () => React.useContext(Store);\n\nexport const UserProvider = ({ children, initialState, reducer }) => {\n  const [globalState, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>{children}</Store.Provider>\n  );\n};\n","import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport const LOGIN = \"APP/AUTH/LOGIN\";\nexport const LOGOUT = \"APP/AUTH/LOGOUT\";\nexport const AUTH = \"APP/AUTH/ADD_AUTH\";\nexport const FIRESTORE = \"APP/AUTH/ADD_FIRESTORE\";\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nexport const initialState = {\n  user: null,\n  auth: auth,\n  firestore: firestore,\n};\n\nexport const login = (user) => ({\n  type: LOGIN,\n  payload: user,\n});\nexport const logout = () => ({\n  type: LOGOUT,\n});\n// export const auth = (auth) => ({\n//   type: AUTH,\n//   auth: auth,\n// });\n// export const firestore = (firestore) => ({\n//   type: FIRESTORE,\n//   firestore: firestore,\n// });\n\nexport const userReducer = (state = initialState, action) => {\n  let data = {};\n  switch (action.type) {\n    case LOGIN:\n      data = {\n        ...state,\n        user: action.payload,\n      };\n      break;\n    case LOGOUT:\n      data = {\n        ...state,\n        user: null,\n      };\n      break;\n    // case AUTH:\n    //   data = {\n    //     ...state,\n    //     auth: action.payload,\n    //   };\n    //   break;\n    default:\n      throw new Error(\"Invalid Dispatch operation\");\n  }\n  return data;\n};\n","import firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useStore } from \"./UserContext\";\nimport { login, logout } from \"./UserReducer\";\nimport \"../CSS/Leaderboard.css\";\n\nexport const SignIn = () => {\n  const [{ auth }, dispatch] = useStore();\n  const [user] = useAuthState(auth);\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n    dispatch(login(user));\n  };\n\n  return (\n    <div className=\"leaderboard full\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <button className=\"sign-in\" onClick={signInWithGoogle}>\n          Sign in with Google\n        </button>\n      </div>\n\n      <p>\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </div>\n  );\n};\nexport const SignOut = () => {\n  const [{ auth }, dispatch] = useStore();\n  return (\n    auth.currentUser && (\n      <button\n        className=\"sign-out\"\n        onClick={() => {\n          dispatch(logout());\n          auth.signOut();\n        }}\n      >\n        Sign Out\n      </button>\n    )\n  );\n};\n","import \"../CSS/Leaderboard.css\";\n\nconst Time = (props) => {\n  return (\n    <td>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"time mili-sec score\">\n        {(\"0\" + ((props.time / 10) % 100)).slice(-2)}\n      </span>\n    </td>\n  );\n};\nexport default Time;\n","import { forwardRef } from \"react\";\nimport { useStore } from \"../Context/UserContext\";\nimport Time from \"./Time\";\n\nexport const TableEntry = (props) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n};\nexport const TableEntryRef = forwardRef((props, ref) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr ref={ref} className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n});\n","import React, { Component } from \"react\";\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th\n            style={{\n              width: \"4rem\",\n            }}\n          >\n            Image\n          </th>\n          <th>Username</th>\n          <th>Best Score</th>\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { createRef, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useStore } from \"../Context/UserContext\";\nimport { TableEntry, TableEntryRef } from \"./TableEntry\";\nimport TableHeader from \"./TableHeader\";\nimport \"../CSS/Leaderboard.css\";\n\nconst Leaderboard = (props) => {\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  const entryRef = firestore.collection(String(props.gridSize));\n  const query = entryRef.orderBy(\"score\", \"asc\");\n  const [allEntries] = useCollectionData(query, { idField: \"uid\" });\n  //   useEffect(() => {}, [allEntries]);\n  const [top, setTop] = useState(true);\n  const topRef = createRef();\n  const userRef = createRef();\n  // const index = (allEntries, user) => {\n  //   for (let index = 0; index < allEntries.length; index++) {\n  //     const entry = allEntries[index];\n  //     if (entry.uid === user.uid) {\n  //       return index;\n  //     }\n  //   }\n  //   return -1;\n  // };\n  return (\n    user && (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <table className=\"table-container\">\n            <TableHeader />\n            <tbody>\n              {allEntries &&\n                allEntries.map((entry, idx) => {\n                  if (idx === 0) {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={topRef}\n                      />\n                    );\n                  }\n                  if (entry.uid !== user.uid) {\n                    return (\n                      <TableEntry\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                      />\n                    );\n                  } else {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={userRef}\n                      />\n                    );\n                  }\n                })}\n            </tbody>\n          </table>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            onClick={(e) => {\n              if (top) {\n                if (userRef.current !== null) {\n                  userRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                    inline: \"nearest\",\n                  });\n                }\n                setTop(false);\n              } else {\n                topRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"start\",\n                  inline: \"nearest\",\n                });\n                setTop(true);\n              }\n            }}\n          >\n            {top ? \"Scroll to you\" : \"Scroll to top\"}\n          </button>\n        </div>\n      </div>\n    )\n  );\n};\nexport default Leaderboard;\n\n// export default class Table extends Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         data: []\n//       }\n//       this.componentDidMount = this.componentDidMount.bind(this)\n//       this.handleSort = this.handleSort.bind(this)\n//     }\n\n//     componentDidMount() {\n//       fetch('https://fcctop100.herokuapp.com/api/fccusers/top/recent')\n//         .then((response) => response.json())\n//         .then((json) => this.setState({\n//           data: json\n//       }))\n//     }\n\n//     handleSort(attribute) {\n//       this.setState({\n//         data: this.state.data.sort(\n//           (a,b) => parseInt(a[attribute], 10) > parseInt(b[attribute], 10) ? -1 : 1\n//       )})\n//     }\n\n//     render() {\n//       const rows = this.state.data.map((row, index) =>\n//         <Tablerow\n//           key={row.username}\n//           position={index + 1}\n//           username={row.username}\n//           alltime={row.alltime}\n//           recent={row.recent}\n//           className={index % 2 === 0 ? 'pure-table-odd' : ''}\n//         />)\n\n//       return (\n//         <table className=\"pure-table\">\n//           <Tablehead onChange={this.handleSort} />\n//           <tbody>\n//             { rows }\n//           </tbody>\n//         </table>\n//       )\n//     }\n//   }\n","import { SignOut } from \"../Context/AuthFunctions\";\nimport Leaderboard from \"./Leaderboard\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardSignedIn = (props) => {\n  return (\n    <div className=\"leaderboard full\">\n      <div className=\"full\">\n        <div className=\"full\">\n          You are logged in as {props.user.displayName}\n        </div>\n        <SignOut />\n      </div>\n\n      <Leaderboard gridSize={props.gridSize} />\n    </div>\n  );\n};\nexport default LeaderboardSignedIn;\n","import LeaderboardSignedIn from \"./LeaderboardSignedIn\";\nimport { SignIn } from \"../Context/AuthFunctions\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardMenu = (props) => {\n  const [{ auth }] = useStore();\n  const [user] = useAuthState(auth);\n  return user ? (\n    <LeaderboardSignedIn user={user} gridSize={props.gridSize} />\n  ) : (\n    <SignIn />\n  );\n};\nexport default LeaderboardMenu;\n","import React from \"react\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\n\nexport const WinAnimation = () => {\n  const { width, height } = useWindowSize();\n  return <Confetti width={width - 1} height={height - 1} />;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport Timer from \"./Timer\";\nimport LeaderboardMenu from \"./LeaderboardMenu\";\nimport \"../index.css\";\nimport firebase from \"firebase\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { WinAnimation } from \"./WinAnimation\";\n\n// const auth = firebase.auth();\nconst Game = () => {\n  const [gridSize, setGridSize] = useState(4);\n  const [won, setWon] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [resetTimer, setResetTimer] = useState(false);\n  const [resetBoard, setResetBoard] = useState(false);\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  const [darkMode, setDarkMode] = useState(true);\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.style.setProperty(\"--bg-color\", \"rgb(47,47,47)\");\n      document.documentElement.style.setProperty(\"--main-color\", \"white\");\n    } else {\n      document.documentElement.style.setProperty(\"--bg-color\", \"white\");\n      document.documentElement.style.setProperty(\n        \"--main-color\",\n        \"rgb(47,47,47)\"\n      );\n    }\n  }, [darkMode]);\n\n  return (\n    <>\n      {won ? <WinAnimation /> : null}\n      <div\n        style={{\n          \"--bg-color\": darkMode ? \"rgb(47,47,47)\" : \"white\",\n          \"--main-color\": darkMode ? \"white\" : \"rgb(47,47,47)\",\n          backgroundColor: \"var(--bg-color)\",\n          color: \"var(--main-color)\",\n        }}\n      >\n        <h1>Number puzzle!</h1>\n        <div className=\"game\">\n          <Board\n            isActive={isActive}\n            setIsActive={setIsActive}\n            gridSize={gridSize}\n            setWon={setWon}\n            setGridSize={setGridSize}\n            user={user}\n            won={won}\n            reset={resetBoard}\n            setReset={setResetBoard}\n          />\n          <div className=\"details\">\n            <label htmlFor=\"number\">\n              <h3 className=\"grid-size\">\n                <span className=\"child-1\">Decide grid size:</span>\n\n                <span className=\"child-1\">{gridSize}</span>\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  onClick={() => {\n                    setGridSize((gr) => gr + 1);\n                  }}\n                  style={{\n                    color: \"var(--main-color)\",\n                  }}\n                >\n                  <path d=\"M23.245 20l-11.245-14.374-11.219 14.374-.781-.619 12-15.381 12 15.391-.755.609z\" />\n                </svg>\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  onClick={() => {\n                    setGridSize((gr) => gr - 1);\n                  }}\n                >\n                  <path d=\"M23.245 4l-11.245 14.374-11.219-14.374-.781.619 12 15.381 12-15.391-.755-.609z\" />\n                </svg>\n              </h3>\n            </label>\n            <div>\n              <h3>{won ? \"Game won\" : \"Game not won\"}</h3>\n              <p>{`Use your arrow keys/click on numbers to move the ## symbol.`}</p>\n              <p>{`End goal: Arrange all the numbers in order from left to right, top to bottom.`}</p>\n            </div>\n            <div>\n              <input\n                id=\"dark-mode\"\n                type=\"checkbox\"\n                checked={darkMode}\n                onChange={(_e) => setDarkMode((val) => !val)}\n              />\n              <label htmlFor=\"dark-mode\">Enable Dark Mode</label>\n            </div>\n            <div>\n              <button\n                className=\"my-button\"\n                onClick={() => {\n                  // setSquares((_) => generateInitArray(gridSize));\n                  setIsActive(false);\n                  setWon(false);\n                  setResetTimer(true);\n                  setResetBoard(true);\n                }}\n              >\n                Reset board\n              </button>\n            </div>\n            <Timer\n              reset={resetTimer}\n              setReset={setResetTimer}\n              won={won}\n              user={user}\n              gridSize={gridSize}\n              isActive={isActive}\n              firebase={firebase}\n              firestore={firestore}\n            />\n            <LeaderboardMenu gridSize={gridSize} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Components/Game\";\nimport { UserProvider } from \"./Context/UserContext\";\nimport { initialState, userReducer } from \"./Context/UserReducer\";\n// import { isSolvable } from \"./Context/utils\";\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider initialState={initialState} reducer={userReducer}>\n      <Game />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}