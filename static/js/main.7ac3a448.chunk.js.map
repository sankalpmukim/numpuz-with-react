{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Timer.js","Context/UserContext.js","Context/UserReducer.js","Context/AuthFunctions.js","Components/Time.js","Components/TableEntry.js","Components/TableHeader.js","Components/Leaderboard.js","Components/LeaderboardSignedIn.js","Components/LeaderboardMenu.js","Context/utils.js","Components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","squares","slice","map","_","idx","squareClick","style","gridSize","Timer","Math","floor","time","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Store","React","createContext","displayName","useStore","useContext","UserProvider","children","initialState","reducer","useReducer","globalState","dispatch","Provider","LOGIN","LOGOUT","user","auth","firestore","SignIn","useAuthState","display","justifyContent","provider","GoogleAuthProvider","signInWithPopup","type","payload","login","SignOut","currentUser","signOut","Time","TableEntry","currUid","uid","document","userName","score","photoUrl","colSpan","rank","width","src","alt","TableEntryRef","forwardRef","ref","TableHeader","Component","Leaderboard","query","collection","String","orderBy","useCollectionData","idField","allEntries","useState","top","setTop","topRef","createRef","userRef","entry","alignItems","e","current","scrollIntoView","behavior","block","inline","LeaderboardSignedIn","LeaderboardMenu","generateArray","initArray","Array","from","length","index","sort","random","swapArrayElements","arr","indexA","indexB","temp","isSolvable","invCount","i","j","getInvCount","val","Number","console","log","puzzle","findXPosition","twoDArray","generateInitArray","output","count","trace","Game","setGridSize","sqrs","setSquares","won","setWon","setTime","isActive","setIsActive","useEffect","localStorage","getItem","JSON","parse","data","setItem","stringify","leaderboardRef","doc","get","then","exists","update","createdAt","FieldValue","serverTimestamp","set","photoURL","alert","newSquares","indexOf","SIZE","sqrt","sortedArray","a","b","arraysEqual","interval","setInterval","clearInterval","movable","mover","BEGIN","verticalChange","horizontalChange","htmlFor","height","xmlns","gr","d","ReactDOM","render","StrictMode","state","action","Error","getElementById"],"mappings":"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","file":"static/js/main.7ac3a448.chunk.js","sourcesContent":["import \"../index.css\";\n\nconst Square = (props) => (\n  <div className=\"square\" onClick={() => props.onClick()}>\n    {props.value}\n  </div>\n);\n\nexport default Square;\n","import \"../CSS/Board.css\";\nimport Square from \"./Square\";\n// class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       gridSize: 4,\n//     };\n//   }\n//   render() {\n//     const gridSize = this.state.gridSize;\n//     const squares = Array(gridSize * gridSize)\n//       .fill(null)\n//       .map((num, idx) => <Square key={idx} />);\n//     return <div className=\"board\">{squares}</div>;\n//   }\n// }\n\nconst Board = (props) => {\n  let squares = props.squares.slice();\n  squares = squares.map((_, idx) => (\n    <Square\n      onClick={() => props.squareClick(idx)}\n      key={squares[idx]}\n      value={squares[idx]}\n    />\n  ));\n\n  return (\n    <div className=\"board\" style={{ \"--grid-size\": props.gridSize }}>\n      {squares}\n    </div>\n  );\n};\n\nexport default Board;\n","import \"../index.css\";\n\nconst Timer = (props) => {\n  return (\n    <div className=\"timer\">\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"digits\">\n        {(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"digits mili-sec\">\n        {(\"0\" + ((props.time / 10) % 100)).slice(-2)}\n      </span>\n    </div>\n  );\n};\nexport default Timer;\n","import React from \"react\";\nimport firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyDBixDXHM4NCrY27GGRPP3X7SozpeUNjzw\",\n  authDomain: \"numpuz-c8a36.firebaseapp.com\",\n  projectId: \"numpuz-c8a36\",\n  storageBucket: \"numpuz-c8a36.appspot.com\",\n  messagingSenderId: \"188829020133\",\n  appId: \"1:188829020133:web:5b1c6f9c42aea6c584c90c\",\n  measurementId: \"G-J8LHBKCHE8\",\n};\nfirebase.initializeApp(config);\n\nconst Store = React.createContext();\nStore.displayName = \"Store\";\n\nexport const useStore = () => React.useContext(Store);\n\nexport const UserProvider = ({ children, initialState, reducer }) => {\n  const [globalState, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <Store.Provider value={[globalState, dispatch]}>{children}</Store.Provider>\n  );\n};\n","import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport const LOGIN = \"APP/AUTH/LOGIN\";\nexport const LOGOUT = \"APP/AUTH/LOGOUT\";\nexport const AUTH = \"APP/AUTH/ADD_AUTH\";\nexport const FIRESTORE = \"APP/AUTH/ADD_FIRESTORE\";\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nexport const initialState = {\n  user: null,\n  auth: auth,\n  firestore: firestore,\n};\n\nexport const login = (user) => ({\n  type: LOGIN,\n  payload: user,\n});\nexport const logout = () => ({\n  type: LOGOUT,\n});\n// export const auth = (auth) => ({\n//   type: AUTH,\n//   auth: auth,\n// });\n// export const firestore = (firestore) => ({\n//   type: FIRESTORE,\n//   firestore: firestore,\n// });\n\nexport const userReducer = (state = initialState, action) => {\n  let data = {};\n  switch (action.type) {\n    case LOGIN:\n      data = {\n        ...state,\n        user: action.payload,\n      };\n      break;\n    case LOGOUT:\n      data = {\n        ...state,\n        user: null,\n      };\n      break;\n    // case AUTH:\n    //   data = {\n    //     ...state,\n    //     auth: action.payload,\n    //   };\n    //   break;\n    default:\n      throw new Error(\"Invalid Dispatch operation\");\n  }\n  return data;\n};\n","import firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useStore } from \"./UserContext\";\nimport { login, logout } from \"./UserReducer\";\nimport \"../CSS/Leaderboard.css\";\n\nexport const SignIn = () => {\n  const [{ auth }, dispatch] = useStore();\n  const [user] = useAuthState(auth);\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n    dispatch(login(user));\n  };\n\n  return (\n    <div className=\"leaderboard full\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <button className=\"sign-in\" onClick={signInWithGoogle}>\n          Sign in with Google\n        </button>\n      </div>\n\n      <p>\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </div>\n  );\n};\nexport const SignOut = () => {\n  const [{ auth }, dispatch] = useStore();\n  return (\n    auth.currentUser && (\n      <button\n        className=\"sign-out\"\n        onClick={() => {\n          dispatch(logout());\n          auth.signOut();\n        }}\n      >\n        Sign Out\n      </button>\n    )\n  );\n};\n","import \"../CSS/Leaderboard.css\";\n\nconst Time = (props) => {\n  return (\n    <td>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:\n      </span>\n      <span className=\"time score\">\n        {(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}.\n      </span>\n      <span className=\"time mili-sec score\">\n        {(\"0\" + ((props.time / 10) % 100)).slice(-2)}\n      </span>\n    </td>\n  );\n};\nexport default Time;\n","import { forwardRef } from \"react\";\nimport { useStore } from \"../Context/UserContext\";\nimport Time from \"./Time\";\n\nexport const TableEntry = (props) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n};\nexport const TableEntryRef = forwardRef((props, ref) => {\n  const [{ auth }] = useStore();\n  const currUid = auth.currentUser.uid;\n  const { userName, score, photoUrl, uid } = props.document;\n  const className = currUid === uid ? \"current-user\" : \"\";\n  return (\n    <tr ref={ref} className={className}>\n      <td colSpan=\"1\">{props.rank}</td>\n      <td\n        colSpan=\"1\"\n        style={{\n          width: \"4rem\",\n        }}\n      >\n        <img src={photoUrl} alt={userName + \"'s photo.\"} className=\"image\" />\n      </td>\n      <td colSpan=\"1\">{userName}</td>\n      <Time time={score} />\n    </tr>\n  );\n});\n","import React, { Component } from \"react\";\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th\n            style={{\n              width: \"4rem\",\n            }}\n          >\n            Image\n          </th>\n          <th>Username</th>\n          <th>Best Score</th>\n        </tr>\n      </thead>\n    );\n  }\n}\n","import { createRef, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useStore } from \"../Context/UserContext\";\nimport { TableEntry, TableEntryRef } from \"./TableEntry\";\nimport TableHeader from \"./TableHeader\";\nimport \"../CSS/Leaderboard.css\";\n\nconst Leaderboard = (props) => {\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  const entryRef = firestore.collection(String(props.gridSize));\n  const query = entryRef.orderBy(\"score\", \"asc\");\n  const [allEntries] = useCollectionData(query, { idField: \"uid\" });\n  //   useEffect(() => {}, [allEntries]);\n  const [top, setTop] = useState(true);\n  const topRef = createRef();\n  const userRef = createRef();\n  // const index = (allEntries, user) => {\n  //   for (let index = 0; index < allEntries.length; index++) {\n  //     const entry = allEntries[index];\n  //     if (entry.uid === user.uid) {\n  //       return index;\n  //     }\n  //   }\n  //   return -1;\n  // };\n  return (\n    user && (\n      <div>\n        <div className=\"table-container\">\n          <table>\n            <TableHeader />\n            <tbody>\n              {allEntries &&\n                allEntries.map((entry, idx) => {\n                  if (idx === 0) {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={topRef}\n                      />\n                    );\n                  }\n                  if (entry.uid !== user.uid) {\n                    return (\n                      <TableEntry\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                      />\n                    );\n                  } else {\n                    return (\n                      <TableEntryRef\n                        key={entry.uid}\n                        document={entry}\n                        rank={idx + 1}\n                        ref={userRef}\n                      />\n                    );\n                  }\n                })}\n            </tbody>\n          </table>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            onClick={(e) => {\n              if (top) {\n                if (userRef.current !== null) {\n                  userRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                    inline: \"nearest\",\n                  });\n                }\n                setTop(false);\n              } else {\n                topRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"start\",\n                  inline: \"nearest\",\n                });\n                setTop(true);\n              }\n            }}\n          >\n            {top ? \"Scroll to you\" : \"Scroll to top\"}\n          </button>\n        </div>\n      </div>\n    )\n  );\n};\nexport default Leaderboard;\n\n// export default class Table extends Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         data: []\n//       }\n//       this.componentDidMount = this.componentDidMount.bind(this)\n//       this.handleSort = this.handleSort.bind(this)\n//     }\n\n//     componentDidMount() {\n//       fetch('https://fcctop100.herokuapp.com/api/fccusers/top/recent')\n//         .then((response) => response.json())\n//         .then((json) => this.setState({\n//           data: json\n//       }))\n//     }\n\n//     handleSort(attribute) {\n//       this.setState({\n//         data: this.state.data.sort(\n//           (a,b) => parseInt(a[attribute], 10) > parseInt(b[attribute], 10) ? -1 : 1\n//       )})\n//     }\n\n//     render() {\n//       const rows = this.state.data.map((row, index) =>\n//         <Tablerow\n//           key={row.username}\n//           position={index + 1}\n//           username={row.username}\n//           alltime={row.alltime}\n//           recent={row.recent}\n//           className={index % 2 === 0 ? 'pure-table-odd' : ''}\n//         />)\n\n//       return (\n//         <table className=\"pure-table\">\n//           <Tablehead onChange={this.handleSort} />\n//           <tbody>\n//             { rows }\n//           </tbody>\n//         </table>\n//       )\n//     }\n//   }\n","import { SignOut } from \"../Context/AuthFunctions\";\nimport Leaderboard from \"./Leaderboard\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardSignedIn = (props) => {\n  return (\n    <div className=\"leaderboard full\">\n      <div className=\"full\">\n        <div className=\"full\">\n          You are logged in as {props.user.displayName}\n        </div>\n        <SignOut />\n      </div>\n\n      <Leaderboard gridSize={props.gridSize} />\n    </div>\n  );\n};\nexport default LeaderboardSignedIn;\n","import LeaderboardSignedIn from \"./LeaderboardSignedIn\";\nimport { SignIn } from \"../Context/AuthFunctions\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"../CSS/Leaderboard.css\";\n\nconst LeaderboardMenu = (props) => {\n  const [{ auth }] = useStore();\n  const [user] = useAuthState(auth);\n  return user ? (\n    <LeaderboardSignedIn user={user} gridSize={props.gridSize} />\n  ) : (\n    <SignIn />\n  );\n};\nexport default LeaderboardMenu;\n","const generateArray = (gridSize) => {\n  const initArray = Array.from({ length: gridSize * gridSize }, (_, index) =>\n    String(index + 1)\n  );\n  // initArray[initArray.length - 1] = String(initArray.length - 1);\n  // initArray[initArray.length - 2] = \"##\";\n  // return initArray;\n  initArray[initArray.length - 1] = \"##\";\n  initArray.sort(() => Math.random() - 0.5);\n  return initArray;\n};\n\nconst swapArrayElements = (arr, indexA, indexB) => {\n  const temp = arr[indexA];\n  arr[indexA] = arr[indexB];\n  arr[indexB] = temp;\n  return arr;\n};\n\nconst arraysEqual = (a, b) => {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n};\n\nconst getInvCount = (squares, gridSize) => {\n  let invCount = 0;\n  for (let i = 0; i < gridSize * gridSize - 1; i++) {\n    for (let j = i + 1; j < gridSize * gridSize; j++) {\n      if (squares[i] > squares[j] && squares[i] !== 0 && squares[j] !== 0) {\n        invCount++;\n      }\n    }\n  }\n  return invCount;\n};\n\nconst findXPosition = (puzzle, gridSize) => {\n  for (let i = gridSize - 1; i >= 0; i--) {\n    for (let j = gridSize - 1; j >= 0; j--) {\n      if (puzzle[i][j] === 0) {\n        return gridSize - i;\n      }\n    }\n  }\n};\n\nconst twoDArray = (squares, gridSize) => {\n  let arr = new Array(gridSize);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(gridSize);\n  }\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      arr[i][j] = squares[i * gridSize + j];\n    }\n  }\n  return arr;\n};\n\nconst isSolvable = (squares, gridSize) => {\n  squares = squares.map((val) => {\n    if (val === \"##\") return 0;\n    else return Number(val);\n  });\n  // console.log(squares);\n  const invCount = getInvCount(squares, gridSize);\n  if (gridSize % 2 === 1) {\n    console.log(\"Odd grid:\", invCount % 2 === 0);\n    return invCount % 2 === 0;\n  } else {\n    const pos = findXPosition(twoDArray(squares, gridSize), gridSize);\n    if (pos % 2 === 1) {\n      console.log(\"Even grid:\", invCount % 2 === 0);\n      return invCount % 2 === 0;\n    } else {\n      console.log(\"Even grid:\", invCount % 2 === 1);\n      return invCount % 2 === 1;\n    }\n  }\n};\n\nconst generateInitArray = (gridSize) => {\n  let output = generateArray(gridSize);\n  let count = 0;\n  while (isSolvable(output, gridSize) === false) {\n    count++;\n    output = generateArray(gridSize);\n  }\n  console.log(\"It took this many re generations\", count);\n  console.log(output);\n  console.trace(\"generateInitArray\");\n  return output;\n};\n\nexport { generateInitArray, swapArrayElements, arraysEqual, isSolvable };\n","import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport Timer from \"./Timer\";\nimport LeaderboardMenu from \"./LeaderboardMenu\";\nimport \"../index.css\";\nimport {\n  generateInitArray,\n  swapArrayElements,\n  arraysEqual,\n} from \"../Context/utils\";\nimport firebase from \"firebase\";\nimport { useStore } from \"../Context/UserContext\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\n// const auth = firebase.auth();\nconst Game = () => {\n  const [gridSize, setGridSize] = useState(4);\n  const sqrs = generateInitArray(gridSize);\n  const [squares, setSquares] = useState(sqrs);\n  const [won, setWon] = useState(false);\n  const [time, setTime] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [{ auth, firestore }] = useStore();\n  const [user] = useAuthState(auth);\n  useEffect(() => {\n    if (won && user) {\n      console.log(user.uid);\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n  }, [won, user, time, gridSize]);\n  useEffect(() => {\n    // console.log(\"in on change won\");\n    if (won && user) {\n      console.log(user.uid);\n      const leaderboardRef = firestore\n        .collection(String(gridSize))\n        .doc(user.uid);\n      leaderboardRef.get().then((doc) => {\n        if (!doc.exists) {\n          leaderboardRef.set({\n            uid: user.uid,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            userName: user.displayName,\n            photoUrl: user.photoURL,\n            score: time,\n          });\n        } else {\n          const { score } = doc.data();\n          if (score > time) {\n            leaderboardRef.update({\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              score: time,\n            });\n          }\n        }\n      });\n      if (localStorage.getItem(gridSize) !== null) {\n        console.log(\"won\");\n        if (\n          typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] ===\n            \"undefined\" ||\n          (typeof JSON.parse(localStorage.getItem(gridSize))[user.uid] !==\n            \"undefined\" &&\n            JSON.parse(localStorage.getItem(gridSize))[user.uid] > time)\n        ) {\n          const data = {\n            ...JSON.parse(localStorage.getItem(gridSize)),\n          };\n          data[user.uid] = time;\n          localStorage.setItem(gridSize, JSON.stringify(data));\n        }\n      } else {\n        const data = {};\n        data[user.uid] = time;\n        localStorage.setItem(gridSize, JSON.stringify(data));\n      }\n    }\n  }, [won, user, time, gridSize, firestore]);\n  useEffect(() => {\n    if (gridSize < 2 || gridSize > 10) {\n      alert(\"Gridsize can only be between 2 and 10!\");\n      setGridSize(4);\n    } else {\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n    }\n  }, [gridSize]);\n  useEffect(() => {\n    if (user === null) {\n      setSquares((_) => generateInitArray(gridSize));\n      setIsActive(false);\n      setWon(false);\n      setTime(0);\n    }\n  }, [user, gridSize]);\n  useEffect(() => {\n    const newSquares = squares.slice();\n    if (newSquares.indexOf(\"##\") === -1) {\n      setWon(true);\n      return;\n    }\n    const SIZE = Math.sqrt(newSquares.length);\n    const sortedArray = Array.from({ length: SIZE * SIZE }, (_, index) =>\n      String(index + 1)\n    );\n    newSquares[newSquares.indexOf(\"##\")] = String(newSquares.length);\n    if (arraysEqual(newSquares, sortedArray)) {\n      console.log(\"Game won\");\n      // setTime(0);\n      setIsActive(false);\n      setWon(true);\n      return;\n    }\n    setWon(false);\n  }, [squares]);\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime((time) => time + 100);\n      }, 100);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive]);\n\n  const movable = (idx) => {\n    const mover = squares.indexOf(\"##\");\n    // Horizontal:-1\n    // Vertical:1\n    // Not possible:0\n    if (idx === mover) {\n      return 0;\n    }\n    if (idx % gridSize === mover % gridSize) {\n      return 1;\n    } else {\n      const BEGIN = mover - (mover % gridSize);\n      if (idx >= BEGIN && idx <= BEGIN + gridSize - 1) {\n        return -1;\n      }\n      return 0;\n    }\n  };\n\n  const verticalChange = (idx, mover) => {\n    // console.log(gridSize);\n    let newSquares = squares.slice();\n    if (idx < mover) {\n      while (newSquares.indexOf(\"##\") !== idx) {\n        newSquares = swapArrayElements(\n          newSquares,\n          newSquares.indexOf(\"##\"),\n          newSquares.indexOf(\"##\") - gridSize\n        );\n      }\n    } else if (idx > mover) {\n      while (newSquares.indexOf(\"##\") !== idx) {\n        // console.log(gridSize);\n        // console.log(newSquares);\n        newSquares = swapArrayElements(\n          newSquares,\n          newSquares.indexOf(\"##\"),\n          newSquares.indexOf(\"##\") + gridSize\n        );\n      }\n    }\n    setSquares(newSquares);\n  };\n\n  const horizontalChange = (idx, mover) => {\n    let newSquares = squares.slice();\n    if (idx < mover) {\n      while (newSquares.indexOf(\"##\") !== idx) {\n        newSquares = swapArrayElements(\n          newSquares,\n          newSquares.indexOf(\"##\"),\n          newSquares.indexOf(\"##\") - 1\n        );\n      }\n    } else if (idx > mover) {\n      while (newSquares.indexOf(\"##\") !== idx) {\n        newSquares = swapArrayElements(\n          newSquares,\n          newSquares.indexOf(\"##\"),\n          newSquares.indexOf(\"##\") + 1\n        );\n      }\n    }\n    setSquares(newSquares);\n  };\n\n  const handleClick = (i) => {\n    // console.log(i);\n    if (!isActive && won === false) {\n      setIsActive(true);\n      setTime(0);\n    }\n    if (movable(i) !== 0 && won === false) {\n      if (movable(i) === 1) {\n        verticalChange(i, squares.indexOf(\"##\"));\n      } else {\n        horizontalChange(i, squares.indexOf(\"##\"));\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Number puzzle!</h1>\n      <div className=\"game\">\n        <Board\n          squares={squares}\n          gridSize={gridSize}\n          squareClick={handleClick}\n        />\n        <div className=\"details\">\n          <label htmlFor=\"number\">\n            <h3 className=\"grid-size\">\n              <span className=\"child-1\">Decide grid size:</span>\n\n              <span className=\"child-1\">{gridSize}</span>\n              <svg\n                width=\"24\"\n                height=\"24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                onClick={() => {\n                  setGridSize((gr) => gr + 1);\n                }}\n              >\n                <path d=\"M23.245 20l-11.245-14.374-11.219 14.374-.781-.619 12-15.381 12 15.391-.755.609z\" />\n              </svg>\n              <svg\n                width=\"24\"\n                height=\"24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                onClick={() => {\n                  setGridSize((gr) => gr - 1);\n                }}\n              >\n                <path d=\"M23.245 4l-11.245 14.374-11.219-14.374-.781.619 12 15.381 12-15.391-.755-.609z\" />\n              </svg>\n            </h3>\n          </label>\n          <div>\n            <h3>{won ? \"Game won\" : \"Game not won\"}</h3>\n          </div>\n          <div>\n            <button\n              className=\"my-button\"\n              onClick={() => {\n                setSquares((_) => generateInitArray(gridSize));\n                setIsActive(false);\n                setWon(false);\n                setTime(0);\n              }}\n            >\n              Reset board\n            </button>\n          </div>\n          <Timer time={time} />\n          <LeaderboardMenu gridSize={gridSize} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Components/Game\";\nimport { UserProvider } from \"./Context/UserContext\";\nimport { initialState, userReducer } from \"./Context/UserReducer\";\n// import { isSolvable } from \"./Context/utils\";\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider initialState={initialState} reducer={userReducer}>\n      <Game />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}